{"version":3,"sources":["images/episode1.jpg","images/episode2.jpg","images/episode3.jpg","images/episode4.jpg","images/episode5.jpg","images/episode6.jpg","API/api.js","redux/reducer.js","components/common/Item.jsx","components/common/ItemOk.jsx","components/entities/Characters.jsx","components/entities/Planets.jsx","components/entities/Starhips.jsx","components/entities/Vehicles.jsx","components/entities/Species.jsx","components/EpisodeItems.jsx","components/FilmItem.jsx","components/FilmsList.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","getSomethingAPI","url","get","initialState","films","episodePlanets","episodeCharacters","episodeStarships","episodeVehicles","episodeSpecies","images","id","src","episode1","episode2","episode3","episode4","episode5","episode6","actions","type","planet","character","starship","vehicle","species","Item","title","name","ItemOk","p","Object","keys","map","key","connect","state","star","getEpisodeCharactersThunk","dispatch","getState","a","some","undefined","result","data","film","props","useState","isCharacter","setCharactersInfo","characterName","setCharacterName","hiddenCharacterName","setHiddenCharacterName","className","onClick","characters","u","filter","includes","getEpisodePlanetsThunk","isPlanets","setPlanetsInfo","planetName","setPlanetName","hiddenPlanetName","setHidePlanetName","planets","viewPlanet","getEpisodeStarshipsThunk","isStarship","setStarshipInfo","starshipName","setStarshipName","hiddenStarshipName","setHiddenStarshipName","starships","getEpisodeVehiclesThunk","isVehicles","setVehiclesInfo","vehiclesName","setVehiclesName","hiddenVehiclesName","setHiddenVehiclesName","vehicles","getEpisodeSpeciesThunk","isSpecies","setSpeciessInfo","speciesName","setSpeciesName","hiddenSpeciesName","setHiddenSpeciesName","EpisodeItem","opening_crawl","director","producer","release_date","FilmItem","f","episode_id","addInfoId","getFilmInfo","getFilmsThunk","sortFilms","results","sort","film1","film2","alert","currentFilms","setCurrentFilms","setAddInfo","useEffect","placeholder","onKeyUp","e","text","filtredFilms","s","toUpperCase","trim","length","filterFunction","currentTarget","value","App","Boolean","window","location","hostname","match","reducers","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.04447b43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/episode1.4c86c3df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode2.74375f3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode3.5256d4c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode4.96290694.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode5.4fd8a9ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode6.eea133cb.jpg\";","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\nexport const getFilmsAPI = () => {\r\n    return instance.get('films/')\r\n}\r\nexport const getSomethingAPI = (url) => {\r\n    return axios.get(url)\r\n}","import {getFilmsAPI, getSomethingAPI} from \"../API/api\";\r\nimport episode1 from \"../images/episode1.jpg\"\r\nimport episode2 from \"../images/episode2.jpg\"\r\nimport episode3 from \"../images/episode3.jpg\"\r\nimport episode4 from \"../images/episode4.jpg\"\r\nimport episode5 from \"../images/episode5.jpg\"\r\nimport episode6 from \"../images/episode6.jpg\"\r\n\r\nconst GET_FILMS = 'GET_FILMS';\r\nconst EPISODE_PLANETS = 'EPISODE_PLANETS'\r\nconst EPISODE_CHARACTERS = 'EPISODE_CHARACTERS'\r\nconst EPISODE_STARHIPS = 'EPISODE_STARHIPS'\r\nconst EPISODE_VEHICLE = 'EPISODE_VEHICLE'\r\nconst EPISODE_SPECIES = 'EPISODE_SPECIES'\r\n\r\n\r\nlet initialState = {\r\n    films: [],\r\n    episodePlanets: [],\r\n    episodeCharacters: [],\r\n    episodeStarships: [],\r\n    episodeVehicles: [],\r\n    episodeSpecies: [],\r\n    images: [{id: 1, src: episode1},\r\n        {id: 2, src: episode2},\r\n        {id: 3, src: episode3},\r\n        {id: 4, src: episode4},\r\n        {id: 5, src: episode5},\r\n        {id: 6, src: episode6}]\r\n};\r\n\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.films\r\n            }\r\n        case EPISODE_PLANETS:\r\n            return {\r\n                ...state,\r\n                episodePlanets: state.episodePlanets.some(p => p.name === action.planet.name) ? state.episodePlanets : [...state.episodePlanets, action.planet]\r\n            }\r\n        case EPISODE_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                episodeCharacters: state.episodeCharacters.some(p => p.name === action.character.name) ? state.episodeCharacters : [...state.episodeCharacters, action.character]\r\n            }\r\n        case EPISODE_STARHIPS:\r\n            return {\r\n                ...state,\r\n                episodeStarships: state.episodeStarships.some(p => p.name === action.starship.name) ? state.episodeStarships : [...state.episodeStarships, action.starship]\r\n            }\r\n        case EPISODE_VEHICLE:\r\n            return {\r\n                ...state,\r\n                episodeVehicles: state.episodeVehicles.some(p => p.name === action.vehicle.name) ? state.episodeVehicles : [...state.episodeVehicles, action.vehicle]\r\n            }\r\n        case EPISODE_SPECIES:\r\n            return {\r\n                ...state,\r\n                episodeSpecies: state.episodeSpecies.some(p => p.name === action.species.name) ? state.episodeSpecies : [...state.episodeSpecies, action.species]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    getFilms: (films) => ({type: GET_FILMS, films}),\r\n    getPlanets: (planet) => ({type: EPISODE_PLANETS, planet}),\r\n    getCharacters: (character) => ({type: EPISODE_CHARACTERS, character}),\r\n    getStarships: (starship) => ({type: EPISODE_STARHIPS, starship}),\r\n    getVehicles: (vehicle) => ({type: EPISODE_VEHICLE, vehicle}),\r\n    getSpecies: (species) => ({type: EPISODE_SPECIES, species}),\r\n}\r\n\r\nexport const getFilmsThunk = () => async (dispatch) => {\r\n    try {\r\n        let result = await getFilmsAPI()\r\n        let sortFilms = result.data.results.sort((film1, film2) => {\r\n            if (film1.title > film2.title) {\r\n                return 1\r\n            }\r\n            if (film1.title < film2.title) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n        dispatch(actions.getFilms(sortFilms))\r\n    } catch (e) {\r\n        alert(e)\r\n    }\r\n}\r\nexport const getEpisodePlanetsThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodePlanets.some(p => p.url === url)) {\r\n        return undefined\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(actions.getPlanets(result.data))\r\n    }\r\n}\r\nexport const getEpisodeCharactersThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeCharacters.some(p => p.url === url)) {\r\n        return undefined\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(actions.getCharacters(result.data))\r\n    }\r\n}\r\nexport const getEpisodeStarshipsThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeStarships.some(p => p.url === url)) {\r\n        return undefined\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(actions.getStarships(result.data))\r\n    }\r\n}\r\nexport const getEpisodeVehiclesThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeVehicles.some(p => p.url === url)) {\r\n        return undefined\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(actions.getVehicles(result.data))\r\n    }\r\n}\r\nexport const getEpisodeSpeciesThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeSpecies.some(p => p.url === url)) {\r\n        return undefined\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(actions.getSpecies(result.data))\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Item = ({title, name}) => {\r\n    return <div>\r\n        <b>{title}: </b><a>{name}</a>\r\n    </div>\r\n}\r\n\r\nexport default Item","import React from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nconst ItemOk = ({p}) => {\r\n    return <div>\r\n        {Object.keys(p).map(key => <Item title={key} name={p[key]}/>)}\r\n    </div>\r\n}\r\nexport default ItemOk","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeCharactersThunk} from \"../../redux/reducer\";\r\n\r\n\r\nconst Characters = ({film, ...props}) => {\r\n\r\n    const [isCharacter, setCharactersInfo] = useState(false)\r\n    const [characterName, setCharacterName] = useState(\"\")\r\n    const [hiddenCharacterName, setHiddenCharacterName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setCharactersInfo(!isCharacter)\r\n        film.characters.map(u => props.getEpisodeCharactersThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setCharacterName(characters)\r\n        setHiddenCharacterName(!hiddenCharacterName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Characters </span>\r\n                {isCharacter && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeCharacters.filter(p => film.characters.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{characterName === p.name && hiddenCharacterName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeCharacters: state.star.episodeCharacters\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeCharactersThunk})(Characters)\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodePlanetsThunk} from \"../../redux/reducer\";\r\n\r\n\r\nconst Planets = ({film, ...props}) => {\r\n\r\n    const [isPlanets, setPlanetsInfo] = useState(false)\r\n    const [planetName, setPlanetName] = useState(\"\")\r\n    const [hiddenPlanetName, setHidePlanetName] = useState(false)\r\n\r\n    const providePlanets = () => {\r\n        setPlanetsInfo(!isPlanets)\r\n        film.planets.map(u => props.getEpisodePlanetsThunk(u))\r\n    }\r\n    const viewPlanet = (planetName) => {\r\n        setPlanetName(planetName)\r\n        setHidePlanetName(!hiddenPlanetName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={providePlanets}>Planets </span>\r\n                {isPlanets && <ul className={\"entity-item__list\"}>\r\n                    {props.episodePlanets.filter(p => film.planets.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewPlanet(p.name)}>\r\n                                    {p.name}\r\n                                </span>{planetName === p.name && hiddenPlanetName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    episodePlanets: state.star.episodePlanets\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodePlanetsThunk})(Planets)\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeStarshipsThunk} from \"../../redux/reducer\";\r\n\r\n\r\nconst Starships = ({film, ...props}) => {\r\n\r\n    const [isStarship, setStarshipInfo] = useState(false)\r\n    const [starshipName, setStarshipName] = useState(\"\")\r\n    const [hiddenStarshipName, setHiddenStarshipName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setStarshipInfo(!isStarship)\r\n        film.starships.map(u => props.getEpisodeStarshipsThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setStarshipName(characters)\r\n        setHiddenStarshipName(!hiddenStarshipName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Starships </span>\r\n                {isStarship && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeStarships.filter(p => film.starships.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{starshipName === p.name && hiddenStarshipName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeStarships: state.star.episodeStarships\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeStarshipsThunk})(Starships);\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeVehiclesThunk} from \"../../redux/reducer\";\r\n\r\n\r\nconst Vehicles = ({film, ...props}) => {\r\n\r\n    const [isVehicles, setVehiclesInfo] = useState(false)\r\n    const [vehiclesName, setVehiclesName] = useState(\"\")\r\n    const [hiddenVehiclesName, setHiddenVehiclesName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setVehiclesInfo(!isVehicles)\r\n        film.vehicles.map(u => props.getEpisodeVehiclesThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setVehiclesName(characters)\r\n        setHiddenVehiclesName(!hiddenVehiclesName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Vehicles </span>\r\n                {isVehicles && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeVehicles.filter(p => film.vehicles.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{vehiclesName === p.name && hiddenVehiclesName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeVehicles: state.star.episodeVehicles\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeVehiclesThunk})(Vehicles);\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeSpeciesThunk} from \"../../redux/reducer\";\r\n\r\n\r\nconst Species = ({film, ...props}) => {\r\n\r\n    const [isSpecies, setSpeciessInfo] = useState(false)\r\n    const [speciesName, setSpeciesName] = useState(\"\")\r\n    const [hiddenSpeciesName, setHiddenSpeciesName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setSpeciessInfo(!isSpecies)\r\n        film.species.map(u => props.getEpisodeSpeciesThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setSpeciesName(characters)\r\n        setHiddenSpeciesName(!hiddenSpeciesName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Spacies </span>\r\n                {isSpecies && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeSpecies.filter(p => film.species.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{speciesName === p.name && hiddenSpeciesName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeSpecies: state.star.episodeSpecies\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeSpeciesThunk})(Species);\r\n","import React from 'react';\r\nimport Characters from \"./entities/Characters\";\r\nimport Planets from \"./entities/Planets\";\r\nimport Starships from \"./entities/Starhips\";\r\nimport Vehicles from \"./entities/Vehicles\";\r\nimport Species from \"./entities/Species\";\r\n\r\n\r\nconst EpisodeItem = ({film}) => {\r\n\r\n    return (\r\n        <div className={\"film-list__info\"}>\r\n            <div><b>Description: </b>{film.opening_crawl}</div>\r\n            <div><b>Director: </b>{film.director}</div>\r\n            <div><b>Producer: </b>{film.producer}</div>\r\n            <div><b>Release date: </b>{film.release_date}</div>\r\n            <Characters film={film}/>\r\n            <Planets film={film}/>\r\n            <Starships film={film}/>\r\n            <Vehicles film={film}/>\r\n            <Species film={film}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EpisodeItem;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport EpisodeItem from \"./EpisodeItems\";\r\n\r\nconst FilmItem = ({film, ...props}) => {\r\n\r\n    const provideAddInfo = (id) => {\r\n        props.getFilmInfo(id)\r\n    }\r\n    const endProvideAddInfo = () => {\r\n        props.getFilmInfo(null)\r\n    }\r\n\r\n\r\n    return (\r\n       <div className={\"films-list__item\"}>\r\n           <div className={\"films-list__photo\"}>\r\n               {props.images.filter(f => f.id === film.episode_id).map(p => <img src={p.src} />)}\r\n               </div>\r\n           {props.addInfoId !== film.episode_id ?\r\n               <div className={\"films-list__title\"}><span onClick={() => provideAddInfo(film.episode_id)}>{film.title}</span></div>\r\n           : <div className={\"films-list__title\"}><span onClick={(endProvideAddInfo)}>{film.title}</span></div>}\r\n           {props.addInfoId === film.episode_id ?\r\n               <EpisodeItem film={film}/>\r\n           : undefined}\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default FilmItem;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getFilmsThunk} from \"../redux/reducer\";\r\nimport FilmItem from \"./FilmItem\";\r\n\r\nconst FilmsList = (props) => {\r\n\r\n    const [currentFilms, setCurrentFilms] = useState(props.films)\r\n    const [addInfoId, setAddInfo] = useState(null)\r\n\r\n    useEffect(() => {\r\n        props.getFilmsThunk()\r\n    }, [])\r\n\r\n    const filterFunction = (text) => {\r\n        let filtredFilms = props.films.filter(s => s.title.toUpperCase().includes(text))\r\n        if (text.trim().length === 0) {\r\n            setCurrentFilms(props.films)\r\n        } else {\r\n            setCurrentFilms(filtredFilms)\r\n        }\r\n    }\r\n\r\n    const searchText = (e) => {\r\n        let text = e.currentTarget.value.toUpperCase();\r\n        filterFunction(text)\r\n    }\r\n\r\n    const getFilmInfo = (id) => setAddInfo(id)\r\n\r\n    useEffect(() => {\r\n        setCurrentFilms(props.films)\r\n    }, [props.films])\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div className={\"header__search\"}>\r\n                    <input placeholder={'Search film'} type={'text'} onKeyUp={searchText} />\r\n                </div>\r\n            </header>\r\n            <div className={\"films-list\"}>\r\n                {currentFilms.map(f => <FilmItem key={f.episode_id}\r\n                                                 film={f}\r\n                                                 addInfoId={addInfoId}\r\n                                                 getFilmInfo={getFilmInfo}\r\n                                                 images={props.images}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    films: state.star.films,\r\n    images: state.star.images\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getFilmsThunk\r\n})(FilmsList);","import React from 'react';\nimport './App.css';\nimport FilmsList from \"./components/FilmsList\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n        <FilmsList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {reducer} from \"./reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    star: reducer\r\n\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}