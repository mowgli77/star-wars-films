{"version":3,"sources":["images/episode1.jpg","images/episode2.jpg","images/episode3.jpg","images/episode4.jpg","images/episode5.jpg","images/episode6.jpg","components/common/Item.jsx","components/common/ItemOk.jsx","API/api.js","components/entities/Characters.jsx","redux/actions.js","redux/types.js","components/entities/Planets.jsx","components/entities/Starhips.jsx","components/entities/Vehicles.jsx","components/entities/Species.jsx","components/EpisodeItems.jsx","components/FilmItem.jsx","components/Header.js","components/FilmsList.jsx","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Item","title","name","ItemOk","p","Object","keys","map","key","instance","axios","create","baseURL","getSomethingAPI","url","endpoint","substring","get","connect","state","episodeCharacters","star","getEpisodeCharactersThunk","dispatch","getState","a","some","result","type","character","data","film","props","useState","isCharacter","setCharactersInfo","characterName","setCharacterName","hiddenCharacterName","setHiddenCharacterName","className","onClick","characters","forEach","u","filter","includes","episodePlanets","getEpisodePlanetsThunk","planet","isPlanets","setPlanetsInfo","planetName","setPlanetName","hiddenPlanetName","setHidePlanetName","planets","viewPlanet","episodeStarships","getEpisodeStarshipsThunk","starship","isStarship","setStarshipInfo","starshipName","setStarshipName","hiddenStarshipName","setHiddenStarshipName","starships","episodeVehicles","getEpisodeVehiclesThunk","vehicle","isVehicles","setVehiclesInfo","vehiclesName","setVehiclesName","hiddenVehiclesName","setHiddenVehiclesName","vehicles","episodeSpecies","getEpisodeSpeciesThunk","species","isSpecies","setSpeciessInfo","speciesName","setSpeciesName","hiddenSpeciesName","setHiddenSpeciesName","EpisodeItem","opening_crawl","director","producer","release_date","FilmItem","images","f","id","episode_id","src","addInfoId","getFilmInfo","undefined","Header","ABCSortisActive","setABCSortisActive","ZYXSortisActive","setZYXSortisActive","dontSortIsActive","setDontSortIsActive","placeholder","onKeyUp","searchText","sortFilmsByABC","disabled","sortFilmsByZYX","getFilmsThunk","films","results","alert","currentFilms","setCurrentFilms","setAddInfo","useEffect","e","text","filtredFilms","s","toUpperCase","trim","length","filterFunction","currentTarget","value","App","Boolean","window","location","hostname","match","initialState","episode1","episode2","episode3","episode4","episode5","episode6","reducers","combineReducers","action","sort","film1","film2","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.680188ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/episode1.4c86c3df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode2.74375f3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode3.5256d4c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode4.96290694.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode5.4fd8a9ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/episode6.eea133cb.jpg\";","import React from \"react\";\r\n\r\nconst Item = ({title, name}) => {\r\n    return <div>\r\n        <b>{title}: </b><a>{name}</a>\r\n    </div>\r\n}\r\n\r\nexport default Item","import React from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nconst ItemOk = ({p}) => {\r\n    return <div>\r\n        {Object.keys(p).map(key => <Item title={key} name={p[key]}/>)}\r\n    </div>\r\n}\r\nexport default ItemOk","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\nexport const getFilmsAPI = () => {\r\n    return instance.get('films/')\r\n}\r\nexport const getSomethingAPI = (url) => {\r\n    const endpoint = url.substring(21, 40)\r\n    return instance.get(endpoint)\r\n}","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeCharactersThunk} from \"../../redux/actions\";\r\n\r\n\r\nconst Characters = ({film, ...props}) => {\r\n\r\n    const [isCharacter, setCharactersInfo] = useState(false)\r\n    const [characterName, setCharacterName] = useState(\"\")\r\n    const [hiddenCharacterName, setHiddenCharacterName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setCharactersInfo(!isCharacter)\r\n        film.characters.forEach(u => props.getEpisodeCharactersThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setCharacterName(characters)\r\n        setHiddenCharacterName(!hiddenCharacterName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Characters </span>\r\n                {isCharacter && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeCharacters.filter(p => film.characters.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{characterName === p.name && hiddenCharacterName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeCharacters: state.star.episodeCharacters\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeCharactersThunk})(Characters)\r\n","import {getFilmsAPI, getSomethingAPI} from \"../API/api\";\r\nimport {\r\n    EPISODE_CHARACTERS,\r\n    EPISODE_PLANETS,\r\n    EPISODE_SPECIES,\r\n    EPISODE_STARHIPS,\r\n    EPISODE_VEHICLE,\r\n    GET_FILMS,\r\n    SORT_FILMS_BY_ABC,\r\n    SORT_FILMS_BY_ZYX\r\n} from \"./types\";\r\n\r\nconst getFilms = (films) => ({type: GET_FILMS, films})\r\nconst getPlanets = (planet) => ({type: EPISODE_PLANETS, planet})\r\nconst getCharacters = (character) => ({type: EPISODE_CHARACTERS, character})\r\nconst getStarships = (starship) => ({type: EPISODE_STARHIPS, starship})\r\nconst getVehicles = (vehicle) => ({type: EPISODE_VEHICLE, vehicle})\r\nconst getSpecies = (species) => ({type: EPISODE_SPECIES, species})\r\nexport const sortFilmsByABC = () => ({type: SORT_FILMS_BY_ABC})\r\nexport const sortFilmsByZYX = () => ({type: SORT_FILMS_BY_ZYX})\r\n\r\n\r\nexport const getFilmsThunk = () => async (dispatch) => {\r\n    try {\r\n        let result = await getFilmsAPI()\r\n        dispatch(getFilms(result.data.results))\r\n    } catch (e) {\r\n        alert(e)\r\n    }\r\n}\r\nexport const getEpisodePlanetsThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodePlanets.some(p => p.url === url)) {\r\n        return null\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(getPlanets(result.data))\r\n    }\r\n}\r\nexport const getEpisodeCharactersThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeCharacters.some(p => p.url === url)) {\r\n        return null\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(getCharacters(result.data))\r\n    }\r\n}\r\nexport const getEpisodeStarshipsThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeStarships.some(p => p.url === url)) {\r\n        return null\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(getStarships(result.data))\r\n    }\r\n}\r\nexport const getEpisodeVehiclesThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeVehicles.some(p => p.url === url)) {\r\n        return null\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(getVehicles(result.data))\r\n    }\r\n}\r\nexport const getEpisodeSpeciesThunk = (url) => async (dispatch, getState) => {\r\n    if (getState().star.episodeSpecies.some(p => p.url === url)) {\r\n        return null\r\n    } else {\r\n        let result = await getSomethingAPI(url)\r\n        dispatch(getSpecies(result.data))\r\n    }\r\n}","export const GET_FILMS = 'GET_FILMS'\r\nexport const EPISODE_PLANETS = 'EPISODE_PLANETS'\r\nexport const EPISODE_CHARACTERS = 'EPISODE_CHARACTERS'\r\nexport const EPISODE_STARHIPS = 'EPISODE_STARHIPS'\r\nexport const EPISODE_VEHICLE = 'EPISODE_VEHICLE'\r\nexport const EPISODE_SPECIES = 'EPISODE_SPECIES'\r\nexport const SORT_FILMS_BY_ABC = 'SORT_FILMS_BY_ABC'\r\nexport const SORT_FILMS_BY_ZYX = 'SORT_FILMS_BY_ZYX'\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodePlanetsThunk} from \"../../redux/actions\";\r\n\r\n\r\nconst Planets = ({film, ...props}) => {\r\n\r\n    const [isPlanets, setPlanetsInfo] = useState(false)\r\n    const [planetName, setPlanetName] = useState(\"\")\r\n    const [hiddenPlanetName, setHidePlanetName] = useState(false)\r\n\r\n    const providePlanets = () => {\r\n        setPlanetsInfo(!isPlanets)\r\n        film.planets.forEach(u => props.getEpisodePlanetsThunk(u))\r\n    }\r\n    const viewPlanet = (planetName) => {\r\n        setPlanetName(planetName)\r\n        setHidePlanetName(!hiddenPlanetName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={providePlanets}>Planets </span>\r\n                {isPlanets && <ul className={\"entity-item__list\"}>\r\n                    {props.episodePlanets.filter(p => film.planets.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewPlanet(p.name)}>\r\n                                    {p.name}\r\n                                </span>{planetName === p.name && hiddenPlanetName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    episodePlanets: state.star.episodePlanets\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodePlanetsThunk})(Planets)\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeStarshipsThunk} from \"../../redux/actions\";\r\n\r\n\r\nconst Starships = ({film, ...props}) => {\r\n\r\n    const [isStarship, setStarshipInfo] = useState(false)\r\n    const [starshipName, setStarshipName] = useState(\"\")\r\n    const [hiddenStarshipName, setHiddenStarshipName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setStarshipInfo(!isStarship)\r\n        film.starships.forEach(u => props.getEpisodeStarshipsThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setStarshipName(characters)\r\n        setHiddenStarshipName(!hiddenStarshipName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Starships </span>\r\n                {isStarship && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeStarships.filter(p => film.starships.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{starshipName === p.name && hiddenStarshipName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeStarships: state.star.episodeStarships\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeStarshipsThunk})(Starships);\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeVehiclesThunk} from \"../../redux/actions\";\r\n\r\n\r\nconst Vehicles = ({film, ...props}) => {\r\n\r\n    const [isVehicles, setVehiclesInfo] = useState(false)\r\n    const [vehiclesName, setVehiclesName] = useState(\"\")\r\n    const [hiddenVehiclesName, setHiddenVehiclesName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setVehiclesInfo(!isVehicles)\r\n        film.vehicles.forEach(u => props.getEpisodeVehiclesThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setVehiclesName(characters)\r\n        setHiddenVehiclesName(!hiddenVehiclesName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Vehicles </span>\r\n                {isVehicles && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeVehicles.filter(p => film.vehicles.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{vehiclesName === p.name && hiddenVehiclesName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeVehicles: state.star.episodeVehicles\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeVehiclesThunk})(Vehicles);\r\n","import React, {useState} from 'react';\r\nimport ItemOk from \"../common/ItemOk\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEpisodeSpeciesThunk} from \"../../redux/actions\";\r\n\r\n\r\nconst Species = ({film, ...props}) => {\r\n\r\n    const [isSpecies, setSpeciessInfo] = useState(false)\r\n    const [speciesName, setSpeciesName] = useState(\"\")\r\n    const [hiddenSpeciesName, setHiddenSpeciesName] = useState(false)\r\n\r\n    const provideCharacters = () => {\r\n        setSpeciessInfo(!isSpecies)\r\n        film.species.forEach(u => props.getEpisodeSpeciesThunk(u))\r\n    }\r\n    const viewCharacter = (characters) => {\r\n        setSpeciesName(characters)\r\n        setHiddenSpeciesName(!hiddenSpeciesName)\r\n    }\r\n\r\n    return (\r\n            <div className={\"entity-item\"}>\r\n                <span onClick={provideCharacters}>Spacies </span>\r\n                {isSpecies && <ul className={\"entity-item__list\"}>\r\n                    {props.episodeSpecies.filter(p => film.species.includes(p.url)).map(p =>\r\n                        <li><span onClick={() => viewCharacter(p.name)}>\r\n                                    {p.name}\r\n                                </span>{speciesName === p.name && hiddenSpeciesName && <ItemOk p={p}/>}\r\n                        </li>)}\r\n                </ul>}\r\n            </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    episodeSpecies: state.star.episodeSpecies\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEpisodeSpeciesThunk})(Species);\r\n","import React from 'react';\r\nimport Characters from \"./entities/Characters\";\r\nimport Planets from \"./entities/Planets\";\r\nimport Starships from \"./entities/Starhips\";\r\nimport Vehicles from \"./entities/Vehicles\";\r\nimport Species from \"./entities/Species\";\r\n\r\n\r\nconst EpisodeItem = ({film}) => {\r\n\r\n    return (\r\n        <div className={\"film-list__info\"}>\r\n            <div><b>Description: </b>{film.opening_crawl}</div>\r\n            <div><b>Director: </b>{film.director}</div>\r\n            <div><b>Producer: </b>{film.producer}</div>\r\n            <div><b>Release date: </b>{film.release_date}</div>\r\n            <Characters film={film}/>\r\n            <Planets film={film}/>\r\n            <Starships film={film}/>\r\n            <Vehicles film={film}/>\r\n            <Species film={film}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EpisodeItem;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport EpisodeItem from \"./EpisodeItems\";\r\n\r\nconst FilmItem = ({film, ...props}) => {\r\n\r\n    const provideAddInfo = (id) => {\r\n        props.getFilmInfo(id)\r\n    }\r\n    const endProvideAddInfo = () => {\r\n        props.getFilmInfo(null)\r\n    }\r\n\r\n\r\n    return (\r\n       <div className={\"films-list__item\"}>\r\n           <div className={\"films-list__photo\"}>\r\n               {props.images.filter(f => f.id === film.episode_id).map(p => <img src={p.src} />)}\r\n               </div>\r\n           {props.addInfoId !== film.episode_id ?\r\n               <div className={\"films-list__title\"}><span onClick={() => provideAddInfo(film.episode_id)}>{film.title}</span></div>\r\n           : <div className={\"films-list__title\"}><span onClick={(endProvideAddInfo)}>{film.title}</span></div>}\r\n           {props.addInfoId === film.episode_id ?\r\n               <EpisodeItem film={film}/>\r\n           : undefined}\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default FilmItem;\r\n\r\n","import React, {useState} from 'react';\r\n\r\nconst Header = (props) => {\r\n\r\n    const [ABCSortisActive, setABCSortisActive] = useState(false)\r\n    const [ZYXSortisActive, setZYXSortisActive] = useState(false)\r\n    const [dontSortIsActive, setDontSortIsActive] = useState(true)\r\n\r\n    const sortByABC = () => {\r\n        setABCSortisActive(true)\r\n        setZYXSortisActive(false)\r\n        setDontSortIsActive(false)\r\n        props.sortFilmsByABC()\r\n    }\r\n    const sortByZYX = () => {\r\n        setZYXSortisActive(true)\r\n        setABCSortisActive(false)\r\n        setDontSortIsActive(false)\r\n        props.sortFilmsByZYX()\r\n    }\r\n    const dontSort = () => {\r\n        setDontSortIsActive(true)\r\n        setABCSortisActive(false)\r\n        setZYXSortisActive(false)\r\n        props.getFilmsThunk()\r\n    }\r\n\r\n    return (\r\n            <header className=\"header\">\r\n                <div className={\"header__search\"}>\r\n                    <input placeholder={'Search film'} type={'text'} onKeyUp={props.searchText} />\r\n                    <button onClick={sortByABC} disabled={ABCSortisActive} className={`header__button`}>Sort by ABC</button>\r\n                    <button onClick={sortByZYX} disabled={ZYXSortisActive} className={`header__button`}>Sort by ZYX</button>\r\n                    <button onClick={dontSort} disabled={dontSortIsActive} className={`header__button`}>Don`t sort</button>\r\n                </div>\r\n            </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header","import React, {useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport FilmItem from \"./FilmItem\";\r\nimport {getFilmsThunk, sortFilmsByABC, sortFilmsByZYX} from \"../redux/actions\";\r\nimport Header from \"./Header\";\r\n\r\n\r\nconst FilmsList = (props) => {\r\n\r\n    const [currentFilms, setCurrentFilms] = useState(props.films)\r\n    const [addInfoId, setAddInfo] = useState(null)\r\n\r\n    useEffect(() => {\r\n        props.getFilmsThunk()\r\n    }, [])\r\n\r\n    const filterFunction = (text) => {\r\n        let filtredFilms = props.films.filter(s => s.title.toUpperCase().includes(text))\r\n        if (text.trim().length === 0) {\r\n            setCurrentFilms(props.films)\r\n        } else {\r\n            setCurrentFilms(filtredFilms)\r\n        }\r\n    }\r\n\r\n    const searchText = (e) => {\r\n        let text = e.currentTarget.value.toUpperCase();\r\n        filterFunction(text)\r\n    }\r\n\r\n    const getFilmInfo = (id) => setAddInfo(id)\r\n\r\n    useEffect(() => {\r\n        setCurrentFilms(props.films)\r\n    }, [props.films])\r\n\r\n    return (\r\n        <div>\r\n            <Header searchText={searchText}\r\n                    sortFilmsByABC={props.sortFilmsByABC}\r\n                    sortFilmsByZYX={props.sortFilmsByZYX}\r\n                    getFilmsThunk={props.getFilmsThunk}\r\n\r\n            />\r\n            <div className={\"films-list\"}>\r\n                {currentFilms.map(f => <FilmItem key={f.episode_id}\r\n                                                 film={f}\r\n                                                 addInfoId={addInfoId}\r\n                                                 getFilmInfo={getFilmInfo}\r\n                                                 images={props.images}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    films: state.star.films,\r\n    images: state.star.images\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    {getFilmsThunk, sortFilmsByABC, sortFilmsByZYX}\r\n)(FilmsList);","import React from 'react';\nimport './App.css';\nimport FilmsList from \"./components/FilmsList\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n        <FilmsList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import episode1 from \"../images/episode1.jpg\"\r\nimport episode2 from \"../images/episode2.jpg\"\r\nimport episode3 from \"../images/episode3.jpg\"\r\nimport episode4 from \"../images/episode4.jpg\"\r\nimport episode5 from \"../images/episode5.jpg\"\r\nimport episode6 from \"../images/episode6.jpg\"\r\nimport {\r\n    EPISODE_CHARACTERS,\r\n    EPISODE_PLANETS,\r\n    EPISODE_SPECIES,\r\n    EPISODE_STARHIPS,\r\n    EPISODE_VEHICLE,\r\n    GET_FILMS,\r\n    SORT_FILMS_BY_ABC, SORT_FILMS_BY_ZYX\r\n} from \"./types\";\r\n\r\nlet initialState = {\r\n    films: [],\r\n    episodePlanets: [],\r\n    episodeCharacters: [],\r\n    episodeStarships: [],\r\n    episodeVehicles: [],\r\n    episodeSpecies: [],\r\n    images: [{id: 1, src: episode1},\r\n        {id: 2, src: episode2},\r\n        {id: 3, src: episode3},\r\n        {id: 4, src: episode4},\r\n        {id: 5, src: episode5},\r\n        {id: 6, src: episode6}]\r\n};\r\n\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.films\r\n            }\r\n        case EPISODE_PLANETS:\r\n            return {\r\n                ...state,\r\n                episodePlanets: state.episodePlanets.some(p => p.name === action.planet.name) ? state.episodePlanets : [...state.episodePlanets, action.planet]\r\n            }\r\n        case EPISODE_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                episodeCharacters: state.episodeCharacters.some(p => p.name === action.character.name) ? state.episodeCharacters : [...state.episodeCharacters, action.character]\r\n            }\r\n        case EPISODE_STARHIPS:\r\n            return {\r\n                ...state,\r\n                episodeStarships: state.episodeStarships.some(p => p.name === action.starship.name) ? state.episodeStarships : [...state.episodeStarships, action.starship]\r\n            }\r\n        case EPISODE_VEHICLE:\r\n            return {\r\n                ...state,\r\n                episodeVehicles: state.episodeVehicles.some(p => p.name === action.vehicle.name) ? state.episodeVehicles : [...state.episodeVehicles, action.vehicle]\r\n            }\r\n        case EPISODE_SPECIES:\r\n            return {\r\n                ...state,\r\n                episodeSpecies: state.episodeSpecies.some(p => p.name === action.species.name) ? state.episodeSpecies : [...state.episodeSpecies, action.species]\r\n            }\r\n        case SORT_FILMS_BY_ABC:\r\n            return {\r\n                ...state,\r\n                films: [...state.films].sort((film1, film2) => {\r\n                    if (film1.title > film2.title) {\r\n                        return 1\r\n                    }\r\n                    if (film1.title < film2.title) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                })\r\n            }\r\n        case SORT_FILMS_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                films: [...state.films].sort((film1, film2) => {\r\n                    if (film1.title < film2.title) {\r\n                        return 1\r\n                    }\r\n                    if (film1.title > film2.title) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {reducer} from \"./reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    star: reducer\r\n\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}